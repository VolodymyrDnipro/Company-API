version: "3.10"

services:
  web:
    build:
      context: .
      dockerfile: docker/Dockerfile
    image: app_fastapi:0.0.1-dev
    container_name: app_fastapi
    command: bash docker/runserver.sh
    restart: always
    environment:
      - DB_HOST=localhost
      - DB_PORT=5432
    env_file:
      - '.env'
    ports:
      - '8000:8000'
    volumes:
      - .:/home/appuser/app
    networks:
      - app_network
    depends_on:
      database:
        condition: service_healthy
      redis_db:
        condition: service_healthy

  tests:
    build:
      context: .
      dockerfile: docker/Dockerfile
    image: app_fastapi_tests:0.0.1-dev
    container_name: app_fastapi_tests
    env_file:
      - .env
    volumes:
      - .:/home/appuser/app
    command: ["pytest"]
    networks:
      - app_network

  redis_db:
    container_name: redis_db
    image: redis:7.0-alpine
    restart: on-failure
    expose:
      - 6379
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/var/lib/redis/data
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "localhost", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app_network

  database:
    container_name: postgres
    image: postgres:15-alpine
    restart: always
    environment:
      - POSTGRES_DB=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - database-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app_network


networks:
  app_network:
    driver: bridge

volumes:
  redis-data:
  database-data:
